apply plugin: 'com.android.application'


ext.playCustomRingback = {
    def playCustomRingback = System.getenv("playCustomRingback")

    if (playCustomRingback == null) {
        logger.log(LogLevel.INFO, "Could not locate playCustomRingback environment variable. " +
                "Trying local.properties")
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').exists()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            playCustomRingback = properties.getProperty('playCustomRingback')
        }
    }

    if (playCustomRingback == null) {
        playCustomRingback = false
    }

    return playCustomRingback
}
android {

    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.icommunicate"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField("boolean", "playCustomRingback", "${playCustomRingback()}")
        }
        debug {
            buildConfigField("boolean", "playCustomRingback", "${playCustomRingback()}")
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude "lib/arm64-v8a/librealm-jni.so"
    }

     // Specify that we want to split up the APK based on ABI
    /* splits {
         abi {
             // Enable ABI split
             enable true

             // Clear list of ABIs
             reset()

             // Specify each architecture currently supported by the Video SDK
             include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

             // Specify that we do not want an additional universal SDK
             universalApk false
         }
     }*/
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // View inject
    implementation 'com.jakewharton:butterknife:10.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
    implementation 'com.squareup.picasso:picasso:2.3.2'
    api 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.1.0'
    implementation 'com.github.f0ris.sweetalert:library:1.5.1'

    //Annotation
    implementation 'org.jetbrains:annotations:16.0.1'

    //Logan square
    annotationProcessor 'com.bluelinelabs:logansquare-compiler:1.3.7'
    implementation 'com.bluelinelabs:logansquare:1.3.7'
    implementation 'info.metadude.android:typed-preferences:2.0.0'

    //Retrofit Libraries
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$httpLogger"

    //Functional libraries
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.karumi:dexter:4.2.0'
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.1'
    implementation project(path: ':padlayout')


    // Twillio app
    implementation 'com.twilio:voice-android:5.1.0'
    implementation group: "com.twilio.sdk", name: "twilio", version: "7.50.0"

    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-media-compat:28.0.0'
    implementation 'com.android.support:animated-vector-drawable:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.koushikdutta.ion:ion:2.1.8'
    implementation 'com.google.firebase:firebase-messaging:17.6.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'

    implementation 'info.hoang8f:android-segmented:1.0.6'

    implementation 'com.brandongogetap:stickyheaders:0.5.1'
    implementation 'com.google.guava:guava:20.0'
    implementation 'com.github.myinnos:AlphabetIndex-Fast-Scroll-RecyclerView:1.0.95'

    implementation 'com.github.RobertApikyan:SegmentedControl:1.2.0'
    implementation 'org.apache.commons:commons-text:1.6'
    implementation 'com.github.traex.rippleeffect:library:1.3'

}
apply plugin: 'com.google.gms.google-services'